



services:
  postgres:
    image: postgres:15
    container_name: chat-pg
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8178
      POSTGRES_DB: chatapplication
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - chat-network

  redis:
    image: redis:7
    container_name: chat-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - my-redis:/data
    networks:
      - chat-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: chat-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - chat-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: chat-kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - chat-network

  chat-app-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app-1
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatapplication
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 8178
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: c29tZS1yZWFsbHktc2VjdXJlLXNlY3JldC1rZXktaGVyZQ==
      NODE_ID: chat-app-1
    networks:
      - chat-network

  chat-app-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app-2
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chatapplication
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 8178
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JWT_SECRET: c29tZS1yZWFsbHktc2VjdXJlLXNlY3JldC1rZXktaGVyZQ==
      NODE_ID: chat-app-2
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge


volumes:
  pgdata:
  my-redis:
